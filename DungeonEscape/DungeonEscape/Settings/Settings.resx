<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAQcAAAAABoCgAAFgAAACgAAABAAAAAgAAAAAEABAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AcREREREREXcREREREREXcxERERERE3MzMRERERERERNxERERERERdzERERERERdzMRERERET
        czMxERERERERE3ERMxERERF3MzMzERERF3czERETERdzMxEzERERERETd3dxMzMzd3d3d3cxM3d3d3N3
        dzM3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3czMzMzd4dzMzETcx
        F3MTMzMRM3d3EREREzN3d3Mzd3dzERMxN4d3MRcREREXcRERERETNzMRERERERERcRF4d3dzExE3iHMR
        EREREzd3ExEREzMzczEREREREREzMTh3d3MzETN3dzMzMREzd3c3ExERMTdzMRERERExETMRd3d3d3d3
        d3d3d3d3d3d4d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3dzN3
        MzM3d3MzM3MzN3MXMzMxcRF3ERMzMzc3MzMzN3MzETMREXdzERERERMzdzcxEREREXcRERERExMzMxER
        cRERMREXeHERMREREzNzERERERERdxERERERMTEzNxdxETMzERd3czMzMxMRM3MRMxERERFzdxETERER
        MREXF3ERN3czN3h3N3d3NzMzdxE3MxEROP93d3d3MRETEREXcTF4iId3d3d3d3d3d3d3d3d3d3d3/3d4
        d3dzMzMzN3d3d3d3d3d3d3d3d3d3d3d3d3d3d3f/d3d3d3d3d3d3d3d3N3d3dzj///h4//gz//93f/+P
        gY+P/3d4//9xMzEzEzN3cRERGP///z///4j///eP///xj///94///4NzMzMzE3dxEREX/xd3f4OPiPgz
        9/+Bj/N/gR/4j4ETMzMzMzMzd3ERERH/d3dzj/94+DN3j4Ef9x/xGPiP//+DMzMzMzd3dzEREf///3P/
        hzf/g/iP9zj4P/gY/z/3OPgzMzMzN3eId3d3j///h///9////3////g////4eP///zMzczN3d3d3d3iP
        93d3f//3eP/3d//4/3j4//d3j//3d3d3d3c3d3dzd3/zMzM3E3d3czMzMzM3czMTETczMzMzc3d3d3gz
        eHM3H///9xMRF3d3cRMzEzd3ERERERERERERNzMzMzNzMzc////3EREXM3dzMzERN3cRERERERERERF3
        MzMzMzMzNzMxERERERd3d3d3Mzd3dzEREREREREREXczMzMzMzM3MxETERMxN3iHd3d3dzd3MRERERER
        ERERdzMzd3N3N3dzMzMzd3d3eIeId3d3d3d3d3d3MzMzMzN3NzN3d3d3d3d3d3d3d3d4iIh4d3d3d3d3
        d3d3d3d3d3d3dzdzczM3dzd3czd3M3dzd3czEzMxMzN3NzERERERMzMzdxERERExE3cxM3MxMxEXcxET
        ERMzEXMXMREREREREREXERERERERN3ERMxEzMY//9xEzETERdxExERERERERETcREREREREXcRMRETER
        j///cxERETN3MRMRERERETERFxERExERMxdzNzE3cxMzc3+DETMTeHdzMRERERETMRF3j///+HeP/4/3
        /4eP93//j/N4//+Hf///c4+Df/dzM3eP////h4////ePh3/4j///94////eP///3j4d/+Hd3EX/xF//3
        j/eP+H/3f/ePg4/3j4czEY+DP/h/83/4dzERH/cRf/h/+Hj4H/d4+I+BGPiP//+Bj4E4+B/zGPgREREf
        +BF/+H/4ePg//3j4f/cX+B/3d/h/9xj/H/8X/zMRERj4EXj/OPcz/xj///8Y////GP///xj///h4////
        MRERGP8ROP84+BH/d/j/9xOP/48Rj//xEY//8zj3//gxETc3/zN//4iHMzMTN3czMzNzMzN3dzM3dzNz
        MzMRdzMzd4f////4iIh4iIh4eIeId3d3d3d3d3d3d3d3d3d3d3d3d////3d3d3d3d3d3d3d3d3d3d3Nz
        d3N3MzdzMzMzM3d3N3d3d3d3d3d3N3d3d3cRERERERd3MxERERExERERdxd3d3d3dxd3dxERERFzdxER
        EREReIczERERERERERF3MTd3d3d3F3gxERERERd3ERERERF4hzMREREREREREXdxEXdzc3N3eBERERER
        F3cREREREXeHMxETERERERERd3d3dzN3d3d3MzEREREXdxERERERd3dzERMzEzMxERN3d3d3d3d3d3iI
        eIh3d3d4eId3d3d3d3d3M3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3c3d3d3MxERM3cx
        ETc3d3N3MzMzERERF3EzMRERExEzN3d3ERERERERFxERETd3cxdxERERERERcxExERERETETF3MzERER
        ERM3ERERETERF3ERERERERNzETMRMRERERc3czMRERERE3cREREREREXcTERERERE3MRN3EzEREREzNz
        MxERERERdxERERERETdzExERERETdxM3czMzMRERE3cxETERERF3MzN3MzM3d3MzMRERERN3N3d3dzMx
        MzNzd3Mzd3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3dzN3d3dzdzM3dzN3c3d3d3d3d3d3
        d3d3dzN3d3d3dzEXExERERF3ERExERE3N3MzMxERERNzERERETMREREXcXEREREREXcREREREREXcRMR
        ERERE3MREREREREREREAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>